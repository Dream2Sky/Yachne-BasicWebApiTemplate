// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yachne.EntityFrameworkCore;

namespace Yachne.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(YachneDBContext))]
    [Migration("20190112085110_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Yachne.Core.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("FCreateTime");

                    b.Property<DateTime>("ForbiddenTime")
                        .HasColumnName("FForbiddenTime");

                    b.Property<bool>("IsForbidden")
                        .HasColumnName("FIsForbidden");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("FPassword")
                        .HasMaxLength(50);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnName("FSalt")
                        .HasMaxLength(50);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("FUserName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("T_User");

                    b.HasData(
                        new { Id = 100001, CreateTime = new DateTime(2019, 1, 12, 16, 51, 10, 544, DateTimeKind.Local), ForbiddenTime = new DateTime(2019, 1, 12, 16, 51, 10, 545, DateTimeKind.Local), IsForbidden = false, Password = "198ae64180289b7dbfedf665a4268f0b", Salt = "X8(oQ=a&:XO(&g%i", UserName = "Yachne" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
